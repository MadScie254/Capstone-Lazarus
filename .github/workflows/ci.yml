name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with basic syntax check
      run: |
        python -m py_compile src/data_utils.py
        python -m py_compile src/inference.py
        
    - name: Run environment validation
      run: |
        python scripts/validate_environment.py
        
    - name: Run smoke tests
      run: |
        python tests/test_data_utils.py
        
    - name: Run data loader validation
      run: |
        python scripts/validate_loader.py
        
    - name: Run inference validation
      run: |
        python scripts/validate_inference.py

  notebook-check:
    name: Validate Notebooks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter nbconvert
        
    - name: Check notebook syntax
      run: |
        jupyter nbconvert --to script notebooks/eda_plant_diseases_clean.ipynb --output /tmp/test_notebook.py
        python -m py_compile /tmp/test_notebook.py
        echo "‚úÖ Notebook syntax validation passed"

  structure-check:
    name: Project Structure Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Check required files and directories
      run: |
        echo "üîç Checking project structure..."
        
        # Check required directories
        test -d "src" || (echo "‚ùå Missing src/ directory" && exit 1)
        test -d "notebooks" || (echo "‚ùå Missing notebooks/ directory" && exit 1)
        test -d "scripts" || (echo "‚ùå Missing scripts/ directory" && exit 1)
        test -d "tests" || (echo "‚ùå Missing tests/ directory" && exit 1)
        
        # Check required files
        test -f "src/data_utils.py" || (echo "‚ùå Missing src/data_utils.py" && exit 1)
        test -f "src/inference.py" || (echo "‚ùå Missing src/inference.py" && exit 1)
        test -f "requirements.txt" || (echo "‚ùå Missing requirements.txt" && exit 1)
        test -f "environment.yml" || (echo "‚ùå Missing environment.yml" && exit 1)
        test -f "README.md" || (echo "‚ùå Missing README.md" && exit 1)
        
        # Check validation scripts
        test -f "scripts/validate_environment.py" || (echo "‚ùå Missing scripts/validate_environment.py" && exit 1)
        test -f "scripts/validate_loader.py" || (echo "‚ùå Missing scripts/validate_loader.py" && exit 1)
        test -f "scripts/validate_inference.py" || (echo "‚ùå Missing scripts/validate_inference.py" && exit 1)
        
        # Check tests
        test -f "tests/test_data_utils.py" || (echo "‚ùå Missing tests/test_data_utils.py" && exit 1)
        
        # Check notebooks
        test -f "notebooks/eda_plant_diseases_clean.ipynb" || (echo "‚ùå Missing clean EDA notebook" && exit 1)
        
        echo "‚úÖ All required project structure elements present"